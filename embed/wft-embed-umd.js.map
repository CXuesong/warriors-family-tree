{"version":3,"sources":["webpack://WarriorsFamilyTreeEmbed/webpack/universalModuleDefinition","webpack://WarriorsFamilyTreeEmbed/webpack/bootstrap","webpack://WarriorsFamilyTreeEmbed/./embed/src/embed.ts","webpack://WarriorsFamilyTreeEmbed/./embed/src/index.ts","webpack://WarriorsFamilyTreeEmbed/./embed/src/pages.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaultAppUrlStem","container","options","HTMLElement","TypeError","intrinsicOptions","embedOptions","url","urlStem","postMessageToken","Math","round","random","toString","route","queryParams","builder","k","URLSearchParams","v","append","set","String","frame","document","createElement","className","style","setProperty","borderWidth","width","transition","allow","sandbox","add","autoResize","embedMessageTarget","EmbedMessageTarget","observeDocumentHeight","scrollable","message","type","height","src","appendChild","dispose","remove","_embedFrame","_messageToken","_hostSettings","_messageCallback","_onMessage","e","isTrusted","data","token","postMessage","location","href","revision","buildTimestamp","settings","addEventListener","this","contentWindow","Error","removeEventListener","mountEmbed","mountFamilyTree","qName","depth"],"mappings":"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","file":"wft-embed-umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WarriorsFamilyTreeEmbed\"] = factory();\n\telse\n\t\troot[\"WarriorsFamilyTreeEmbed\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { IDisposable } from \"tasklike-promise-library\";\nimport { EmbedMessage, HostMessage, IHostSettings } from \"../../shared/messages\";\n\nexport interface IEmbedIntrinsicOptions {\n    urlStem?: string;\n    className?: string;\n    style?: Record<string, string | 0 | null>;\n    autoResize?: boolean;\n    scrollable?: boolean;\n}\n\nexport interface IEmbedOptions {\n    route?: string;\n    queryParams?: string | Record<string, any>;\n    embedOptions?: IEmbedIntrinsicOptions;\n}\n\n/**\n * The URL prefix of Warriors Family Tree.\n */\nexport const defaultAppUrlStem = environment.isProduction ? \"https://crystal-pool.github.io/warriors-family-tree/#\" : \"http://localhost:3080/#\";\n\n/**\n * Embeds the Warriors Family Tree inside the specified HTML element.\n * @param container The HTML element that will host the embed. An empty `<div>` element is okay for this.\n * @param options Additional options.\n */\nexport function mountEmbed(container: HTMLElement, options?: IEmbedOptions): IDisposable {\n    if (!(container && container instanceof HTMLElement))\n        throw new TypeError(\"container should be an HTMLElement object.\");\n    if (options && !(typeof options === \"object\"))\n        throw new TypeError(\"options should be an IEmbedOptions object.\");\n    options = options || {};\n    const intrinsicOptions = options.embedOptions || {};\n    let url = intrinsicOptions.urlStem || defaultAppUrlStem;\n    const postMessageToken = \"wft-pmt-\" + Math.round(Math.random() * 2821109907456).toString(36);\n    if (options.route) url += options.route;\n    if (options.queryParams) {\n        let builder: URLSearchParams | undefined;\n        if (typeof options.queryParams === \"object\") {\n            builder = new URLSearchParams();\n            for (const k in options.queryParams) {\n                if (options.queryParams.hasOwnProperty(k)) {\n                    const v = options.queryParams[k];\n                    if (v != null) {\n                        builder.append(k, v);\n                    }\n                }\n            }\n        } else {\n            builder = new URLSearchParams(options.queryParams);\n        }\n        builder.set(\"embed\", \"true\");\n        builder.set(\"pmToken\", postMessageToken);\n        url += \"?\" + String(builder);\n    }\n    const frame = document.createElement(\"iframe\");\n    frame.className = \"warriors-family-tree-embed \" + (intrinsicOptions.className || \"\");\n    if (intrinsicOptions.style) {\n        for (const k in intrinsicOptions.style) {\n            if (intrinsicOptions.style.hasOwnProperty(k)) {\n                let v = intrinsicOptions.style[k];\n                if (typeof v === \"number\") v = String(v);\n                frame.style.setProperty(k, v);\n            }\n        }\n    } else {\n        // Style preset\n        frame.style.borderWidth = \"0\";\n        frame.style.width = \"100%\";\n        frame.style.transition = \"height 0.5s ease-out\";\n    }\n    frame.allow = \"fullscreen\";\n    frame.sandbox.add(\"allow-popups\", \"allow-popups-to-escape-sandbox\", \"allow-scripts\", \"allow-same-origin\");\n    const autoResize = intrinsicOptions.autoResize == null ? true : intrinsicOptions.autoResize;\n    const embedMessageTarget = new EmbedMessageTarget(frame, postMessageToken, {\n        observeDocumentHeight: autoResize,\n        scrollable: intrinsicOptions.scrollable\n    }, (message) => {\n        switch (message.type) {\n            case \"documentHeightChanged\":\n                if (autoResize) {\n                    frame.style.height = message.height + \"px\";\n                }\n                break;\n        }\n    });\n    frame.src = url;\n    container.appendChild(frame);\n    return {\n        dispose() {\n            embedMessageTarget.dispose();\n            frame.remove();\n        }\n    };\n}\n\nclass EmbedMessageTarget implements IDisposable {\n    public constructor(\n        private readonly _embedFrame: HTMLIFrameElement,\n        private readonly _messageToken: string,\n        private readonly _hostSettings: IHostSettings,\n        private readonly _messageCallback: (message: EmbedMessage) => void) {\n        window.addEventListener(\"message\", this._onMessage);\n    }\n    public postMessage(message: HostMessage): void {\n        if (!message.token) message.token = this._messageToken;\n        if (!this._embedFrame.contentWindow)\n            throw new Error(\"Cannot postMessage to the embed <iframe>.\");\n        this._embedFrame.contentWindow!.postMessage(message, \"*\");\n    }\n    public dispose(): void {\n        window.removeEventListener(\"message\", this._onMessage);\n    }\n    private readonly _onMessage = (e: MessageEvent): void => {\n        if (e.isTrusted && e.data && typeof e.data === \"object\" && e.data.token === this._messageToken && typeof e.data.type === \"string\") {\n            const message = e.data as EmbedMessage;\n            if (!environment.isProduction) {\n                console.log(\"EmbedMessageTarget._onMessage\", e);\n            }\n            switch (message.type) {\n                case \"ready\":\n                    this.postMessage({\n                        type: \"initialize\",\n                        url: location.href,\n                        revision: environment.commitId,\n                        buildTimestamp: environment.buildTimestamp,\n                        settings: this._hostSettings\n                    });\n                    break;\n            }\n            this._messageCallback(message);\n        }\n    }\n}\n","/// <reference path=\"../../shared/environment.d.ts\" />\n\nexport { mountEmbed } from \"./embed\";\nexport { mountFamilyTree } from \"./pages\";\n","import { IDisposable } from \"tasklike-promise-library\";\nimport { mountEmbed } from \"./embed\";\n\nexport interface IFamilyTreeOptions {\n    qName: string;\n    depth: number;\n}\n\nexport function mountFamilyTree(container: HTMLElement, options: IFamilyTreeOptions): IDisposable {\n    if (!options)\n        throw new TypeError(\"options argument is required.\");\n    if (!(typeof options === \"object\"))\n        throw new TypeError(\"options should be an IFamilyTreeOptions object.\");\n    return mountEmbed(container, {\n        route: `/familyTree/${options.qName}`,\n        queryParams: { depth: options.depth }\n    });\n}\n"],"sourceRoot":""}